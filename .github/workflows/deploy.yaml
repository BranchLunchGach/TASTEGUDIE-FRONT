name: Build and Deploy

on:
  push:
    branches:
      - dev  # 'believeme' 브랜치에 푸시할 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 'contents' 권한을 'write'로 설정하여 푸시 권한 부여

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. Node.js 설치
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # 필요한 Node.js 버전으로 수정

      # 3. 의존성 설치 및 빌드
      - name: Install dependencies and build
        run: |
          npm install
          npm run build
        env:
          CI: false  # CI 환경 변수를 false로 설정하여 ESLint 경고를 무시

      # 4. deploy 브랜치 체크아웃
      - name: Checkout deploy branch
        run: |
          # 사용자 정보 설정
          git config --global user.name "pleasebelieveme"  # 사용자 이름
          git config --global user.email "cain1227@naver.com"  # 사용자 이메일
          # 'deploy' 브랜치 체크아웃, 없으면 새로 생성
          git checkout deploy || git checkout --orphan deploy
          git rm -rf .  # deploy 브랜치의 기존 파일 삭제
          
      # 5. 빌드 파일 복사 (node_modules 제외)
      - name: Copy build files
        run: |
          # 빌드된 파일만 복사하고 node_modules는 제외
          cp -r build/* .  # build 폴더의 파일만 복사
          rm -rf build  # 빌드 폴더 삭제
          # node_modules 폴더가 .gitignore에 포함되도록 보장
          echo "node_modules/" >> .gitignore
          # .gitignore 업데이트
          git add .gitignore

      # 6. 변경 사항이 있는 경우에만 커밋 및 푸시
      - name: Commit and push if there are changes
        run: |
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Deploy React build files"
            # GitHub Token을 사용하여 인증
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/BranchLunchGach/TASTEGUDIE-FRONT.git deploy --force
          else
            echo "No changes to commit"
          fi
